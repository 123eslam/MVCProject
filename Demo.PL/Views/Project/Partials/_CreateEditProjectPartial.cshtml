@model UpdateProjectDto
@inject IDepartmentService departmentService
@{
	var departments = new SelectList(await departmentService.GetDepartmentsAsync(), nameof(DepartmentToReturnDto.Id), nameof(DepartmentToReturnDto.Name));
}
<form method="post" asp-action="@ViewData["Title"]" class="col-8" enctype="multipart/form-data">
	<div asp-validation-summary="ModelOnly"></div>
	<div class="form-floating mt-3">
		<input class="form-control" asp-for="Name" placeholder="">
		<label asp-for="Name">Name</label>
		<span asp-validation-for="Name" class="text-danger"></span>
	</div>
	<div class="form-floating mt-3">
		<input class="form-control" asp-for="Location" placeholder="">
		<label asp-for="Location">Location</label>
		<span asp-validation-for="Location" class="text-danger"></span>
	</div>
	<div class="form-floating mt-3">
		<input class="form-control" asp-for="City" placeholder="">
		<label asp-for="City">City</label>
		<span asp-validation-for="City" class="text-danger"></span>
	</div>
	<div class="form-group mt-3">
		<label asp-for="DepartmentId" class="control-label mb-2"></label>
		<select asp-for="DepartmentId" asp-items="departments" class="form-control">
			<option value="@null">Select Department</option>
		</select>
	</div>
	<div class="m-auto mt-4">
		@if (ViewData["Title"] as string == "Create")
		{
			<input type="submit" class="btn btn-primary" value="Create">
		}
		else
		{
			<input type="submit" class="btn btn-success" value="Edit">
		}
		<a asp-controller="Project" asp-action="Index" class="btn btn-outline-dark">Back to list</a>
	</div>
</form>